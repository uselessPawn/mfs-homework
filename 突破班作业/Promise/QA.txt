问答题：
1. Promsie 对象有几种状态？他们之间是怎么转换的？
三种状态
pending     未处理
fulfilled    成功
rejected    出错

只存在pending转换成fulfilled和rejected两种转换。


2. 下面代码的输出结果是什么？（饿了么面试题）
```
setTimeout(function() {
   console.log(1)
}, 0);

new Promise(function executor(resolve) {
   console.log(2);
   for( var i=0 ; i<10000 ; i++ ) {
      i == 9999 && resolve();
   }
   console.log(3);
}).then(function() {
   console.log(4);
});
console.log(5);
```
输出：23541

3. 什么是 Promise 对象？引入 Promise 对象是为了解决什么？
Promise 是异步编程的一种解决方案，比传统的解决方案————回调函数和事件————更合理和更强大。
为了解决回调函数嵌套过多形成回调地狱，导致代码可读性差，难以调试的问题。


4. var p = new Promise() 中 p 对象有哪些方法？各有什么功能？
1. then方法，
它的作用是为 Promise 实例添加状态改变时的回调函数。
第一个参数是Promise对象的状态变为resolved时调用
第二个参数函数是Promise对象的状态变为rejected时调用。

2. catch方法
它是.then(null, rejection)或.then(undefined, rejection)的别名，用于指定发生错误时的回调函数。

3. finally方法
finally()方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。该方法是 ES2018 引入标准的。

4. all方法
Promise.all()方法用于将多个 Promise 实例，包装成一个新的 Promise 实例。
```
const p = Promise.all([p1, p2, p3]);
```
p的状态由p1、p2、p3决定，分成两种情况。
（1）只有p1、p2、p3的状态都变成fulfilled，p的状态才会变成fulfilled，此时p1、p2、p3的返回值组成一个数组，传递给p的回调函数。
（2）只要p1、p2、p3之中有一个被rejected，p的状态就变成rejected，此时第一个被reject的实例的返回值，会传递给p的回调函数。

5. race方法
它同样是将多个 Promise 实例，包装成一个新的 Promise 实例。不同点是只有要一个完成就改变状态。
```
const p = Promise.race([p1, p2, p3]);
```
上面代码中，只要p1、p2、p3之中有一个实例率先改变状态，p的状态就跟着改变。那个率先改变的 Promise 实例的返回值，就传递给p的回调函数。

6. allSettled方法，ES2020引入
它的作用是用来确定一组异步操作是否都结束了（不管成功或失败）

7. any，ES2021引入
该方法接受一组 Promise 实例作为参数，包装成一个新的 Promise 实例返回。
只要有一个成功promise满足，结果就满足。

8. resolve
它能将现有对象转为 Promise 对象，且状态为resolve
Promise.reject(reason)方法也会返回一个新的 Promise 实例，该实例的状态为rejected。

5. Promise.all 和 Promise.race 的区别是什么？
all是要等所有结束，race是只要有一个完成就好


6. Promise 中抛出未处理的异常会怎么样？会阻碍后面的代码执行吗？Chrome 和 Node.js 环境下有什么不同？

如果是待定阶段抛出异常，那么不会阻碍后面的代码执行，也不报错。

如果是 catch 方法中再抛出异常，Node.js捕捉不到，既不报错，也不阻止运行，但是输出错误是警告的形式。而Chrome会报错，但是也不影响执行。


7. catch 方法中再抛出异常会怎么样，需要怎样捕捉？
可以在回调链的尾端，使用promise.done方法，保证抛出任何可能出现的错误。

8。 then的链式调用每次返回的是同一个 Promise 对象吗？请写一小段代码证明你的观点

不是。
```
var p1 = new Promise((resolved, rejected)=>{
    resolved("done.")
})
var p2 = p1.then((data)=>{
    console.log(data)
})
console.log(p1 === p2)
```

代码题
1. 请使用 Promise 重构之前作业：新闻瀑布流 中的 图片加载 和 加载更多 部分，比较 Promise 写法与之前的写法的区别


2. 请自行封装 ajaxGet(url) 函数，其返回值为 Promise ，其中 data 为获取的数据（内部使用 XMLHttpRequest）


3. 请利用自己实现的 ajaxGet(url) 函数，实现串行（一个接一个的）发送10个请求，来获取下面 api 的前10页数据


4. 请利用自己实现的 ajaxGet(url) 函数，实现并行（同时）发送10个请求，来获取下面 api 的前10页数据


GET http://learning-api.mafengshe.com/news （后端已经添加跨域返回头），该地址支持如下几个参数
参数    	含义
pageSize	默认值 30（最大200），每一页的新闻条目数
page	    默认 1，请求的页码