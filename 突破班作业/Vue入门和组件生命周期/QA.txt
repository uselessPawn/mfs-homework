问答题
1. 什么是MVVM？M V VM三者之间是什么关系？
M(model)        模型
V(view)         视图
VM(view model)  视图模型  

model       表示数据库的数据模型
view        表示界面
view model  表示界面的数据模型

view model 为 view 提供数据支持
model 为 view model 提供数据支持

也就是数据最初从 model 流出，经过加工变成 view model，view model 再加工变成 view。


2. 如何指定 Vue 根元素的挂载点？
设置 Vue 构造函数输入的对象的el属性，选取方式为CSS的选择器。


3. 如何声明Model里的数据？View是根据什么渲染的？
设置 Vue 构造函数输入的对象的data属性。它是一个对象。在这个对象里可以声明model里的数据。
View 是根据 model 渲染的。


4. Vue 中如何让视图绑定Model里的数据？（请从绑定属性和绑定字符串两个方面回答）
绑定属性用v-bind,或者简写成:

vue绑定值与字符串拼接两种写法
第一种
:title="`字符串${xx}`"

第二种
:title="'字符串' + xx"


5. Vue 中如何绑定视图元素的事件？
在标签里用@加事件名的方式。
如<button @click=""></button>


6. View和Model是如何互相影响的？
model 通过属性绑定属性影响 view
view 通过绑定时间来影响 model

v-model 则是双向影响

7. 什么是 Vue 组件？如何声明？如何使用？
调用Vue的静态方法：component。
第一个参数是模板名，在html调用时用为标签名
第二个参数是和vue实例一致，除了没有el属性，data 必须是一个函数


```
// 定义一个名为 button-counter 的新组件
Vue.component('button-counter', {
  data: function () {
    return {
      count: 0
    }
  },
  template: '<button v-on:click="count++">You clicked me {{ count }} times.</button>'
})
```

8. 什么是组件的生命周期？Vue 组件的生命周期有哪些？分别在什么时候调用？
就是一个vue组件从诞生到销毁经历的各个阶段。

vue组件的生命周期有：
beforeCreate: 
在实例初始化之后，数据观测(data observer) 和 event/watcher 事件配置之前被调用。

created: 
实例已经创建完成之后被调用。
在这一步，实例已完成以下的配置：数据观测(data observer)，属性和方法的运算， watch/event 事件回调
。然而，挂载阶段还没开始，$el 属性目前不可见。

beforeMount:
在挂载开始之前被调用：相关的 render 函数首次被调用。

Mounted:
el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。如果 root 实例挂载了一个文档内元素，当 mounted 被调用时 vm.$el 也在文档内。 

beforeUpdate:
数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁之前。你可以在这个钩子中进一步地更改状态，这不会触发附加的重渲染过程。

updated:
由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。

beforeDestroy:
实例销毁之前调用。在这一步，实例仍然完全可用。

destyoy:
vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。


代码题
1. 请使用 Vue 在 data 内声明 str:"Hello Vue"，在视图中显示Hello Vue


2. 请实现计数器：视图上有一个div和一个button，如果点击botton则div中的数字加1


3. 请声明组件item，并通过v-for命令实现创建多个item


4. 请实现在组件创建的打印created，在组件销毁的时候打印destroyed

