问答题
1. 什么是解构？解构本质是什么？
ES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为解构。
本质是模式匹配。


2. 什么是解构默认值？怎样使用？
解构赋值允许指定默认值。
let [x, y = 'b'] = ['a'];


3. 下面代码执行会报错吗？为什么？
```
let foo;
let {foo} = {foo: 1};
```

会报错。
因为foo已经被声明了，再用解构就是重复声明，而这对于let声明的变量是不允许的。


4. 下面代码执行结果是什么？会报错吗？
```
const {"0": a,"1": b} = ["foo", "bar"];
```

不报错，因为数组也是对象，所以可以按照对象的模式匹配，并且成功赋值。
在这里["foo","bar"]等效于{"0":"foo","1":"bar"}


5. 下面代码声明了几个变量？值是多少？
```
let { a: { b: { c }}} = { a: { b: { c: "1",d: "2"}}}
```
一个，只有c，值是'1'


6. 数组解构的核心是什么？请自学 Generator 函数 回答下面代码返回什么
```
function* count() {
   let i = 1
   while (true) {
      yield i++;
   }
}

let [first, second, third, fourth, fifth, sixth] = count();
```
核心是迭代器。
对first到sixth依个赋值为1-6

7. 字符串可以解构吗？结合下面代码说说为什么？
```
const [a, b, c, d, e] = 'hello';
```
可以，在解构里的字符串会被转换成一个类似数组的对象。


代码题
1. 请使用解构语法实现交换两个数
let x=1;
let y=2;
[x,y] = [y,x];


2. 请使用解构语法实现获取斐波那契数列前10个数

```
getFib(10)

function getFib(n) {
    let x = 1;
    let y = 1;
    console.log(x)
    console.log(x)
    for (let i = 0; i < n-2; i++) {
        [x, y] = [y, x + y]
        console.log(y)
    }
}
```

3. 对于单参数函数，如果通过解构语法设置默认值，修改代码实现默认值b = 10
```
function test({a,b}){
   console.log(a,b)
}
```

function test({a,b=10}){
   console.log(a,b)
}



