问答题：
1. dom 元素常用属性有哪些？
nodeName：元素标签名，还有个类似的tagName
nodeType：元素类型
className: 元素类名
id: 元素id
children: 子元素列表（HTMLCollection）
childNodes: 子元素列表（NodeList）
firstChild: 第一个子元素
lastChild: 最后一个子元素
nextSibling: 下一个兄弟元素
previousSibling: 上一个兄弟元素
parentNode、parentElement: 父元素

2. 如何查找元素？
getElementById,
通过标签的id属性匹配查询，返回的是Element对象，没有返回null。

getElementsByClassName,
通过标签的class属性匹配查询（包括自身），参数可以是多个空格分隔的class名字，返回HTMLCollection对象

getElementsByTagName,
通过标签的标签名进行查询（包括自身），参数不带尖括号，返回HTMLCollection对象

getElementsByName,
通过标签的name属性进行查询，返回的是NodeList对象

querySelector,
通过CSS的选择器语法进行查询，只返回找到的第一个

querySelectorAll,
通过CSS的选择器语法进行查询，返回NodeList类型对象。

elementFromPoint,
通过元素在窗口上的坐标进行查询，两个参数为以左上角为原点的x坐标和y坐标


3. 如何增/删/改/查元素？
增：
创建结点是document方法，但要注意的是，这里只是创建，并没有挂载到dom树上。
createElement，创建元素节点，参数是标签名。
createTextNode，创建文本节点，参数是文本内容
createDocumentFragment，创建DOM片段，参数是一段html的合法标签。

删：
删除元素使用removeChild()


改：
appendChild
在元素的子元素末尾添加一个元素,如果是添加本身就是该元素子元素的元素，那么只是把那个子元素的位置变成最后一个。

insertBefore
在某个元素之前插入元素。

replace
将一个元素替换成另一个元素
replaceChild接受两个参数：要插入的元素和要替换的元素


查：
同上题。


4. HTMLCollectioin 和 NodeList 有何异同？
相同：
1. 都是类数组对象，都有length属性，可以通过for循环迭代
2. 都是只读的
3. 都是实时的，即文档的更改会立即反映到相关对象上面(有一个例外，document.querySelectorAll返回的NodeList不是实时的)
4. 都有item()方法，可以通过item(index)或item("id")获取元素

不同点：
1. HTMLCollection对象具有namedItem()方法，可以传递id或name获得元素
2. HTMLCollection的item()方法和通过属性获取元素(document.forms.f1)可以支持id和name，而NodeList对象只支持id


代码题：
1. 请使用 Dom 操作向<ul id="list"></ul> 中插入如下 dom
 ```
 <li>1</li>
 <li>2</li>
 ```